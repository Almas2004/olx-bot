import requests
import time
from bs4 import BeautifulSoup
import os
from dotenv import load_dotenv
import html

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ .env
BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
CHAT_ID = os.environ.get("TELEGRAM_CHAT_ID")

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
SEARCH_URL = "https://www.olx.kz/elektronika/telefony-i-aksesuary/mobilnye-telefony-smartfony/atyrau/?search%5Bdist%5D=100&search%5Bfilter_float_price:to%5D=55000&search%5Bfilter_enum_mobile_phone_manufacturer%5D%5B0%5D=2065&search%5Bfilter_enum_operating_system%5D%5B0%5D=2"
CHECK_INTERVAL = 30  # –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (5 –º–∏–Ω—É—Ç)
SEEN_FILE = "seen.txt"

HEADERS = {
    "User-Agent": "Mozilla/5.0"
}


def load_seen():
    try:
        with open(SEEN_FILE, "r", encoding="utf-8") as f:
            return set(line.strip() for line in f)
    except FileNotFoundError:
        return set()


def save_seen(seen):
    with open(SEEN_FILE, "w", encoding="utf-8") as f:
        for link in seen:
            f.write(link + "\n")


def get_latest_ads():
    response = requests.get(SEARCH_URL, headers=HEADERS)
    soup = BeautifulSoup(response.text, "html.parser")
    ads = soup.select('div[data-testid="listing-grid"] div[data-cy="l-card"]')[:50]  # –ø—Ä–æ–≤–µ—Ä—è–µ–º 50

    results = []
    for ad in ads:
        title_tag = ad.select_one('a.css-1tqlkj0')
        price_tag = ad.select_one('p[data-testid="ad-price"]')
        link_tag = ad.select_one('a')

        if not link_tag or "href" not in link_tag.attrs:
            continue

        title = title_tag.get_text(strip=True) if title_tag else "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"
        price = price_tag.get_text(strip=True) if price_tag else "–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
        link = "https://www.olx.kz" + link_tag["href"]

        results.append((title, price, link))

    return results


def send_telegram_message(text):
    if not BOT_TOKEN or not CHAT_ID:
        print("‚ùå BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã!")
        return

    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": text,
        "parse_mode": "HTML",
        "disable_web_page_preview": True
    }

    try:
        response = requests.post(url, data=payload)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")


def main():
    seen_links = load_seen()
    print("üîÅ –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π...\n")

    while True:
        ads = get_latest_ads()
        new_ads = [ad for ad in ads if ad[2] not in seen_links]

        if new_ads:
            print(f"üÜï –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {len(new_ads)}\n")
            
            for i, (title, price, link) in enumerate(new_ads, 1):
                print(f"{i}. {title}")
                print(f"   üí∞ {price}")
                print(f"   üîó {link}\n")

                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML-—Å–∏–º–≤–æ–ª—ã
                safe_price = html.escape(price)
                safe_link = html.escape(link)

                message = f"üì¢ –ü–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ\nüí∞ {safe_price}\nüîó <a href='{safe_link}'>–°–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ OLX</a>"
                send_telegram_message(message)
                seen_links.add(link)

            save_seen(seen_links)
        else:
            print("‚è≥ –ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç...\n")

        time.sleep(CHECK_INTERVAL)


if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")